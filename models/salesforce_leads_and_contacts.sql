{{ config
(
    materialized='table',
    database = 'PROD',
    schema = 'MARKETING'
)
}}

WITH source AS (

SELECT

    --IDS
    
    IFNULL(CONTACTS.ID, LEADS.ID) as PERSON_ID,
    LEADS.ID as LEAD_ID,
    CONTACTS.ID as CONTACT_ID,
    IFF(LEADS.ID IS NULL, 'Contact', 'Lead') as ORIGINAL_PERSON_TYPE,
    IFF(CONTACTS.ID IS NOT NULL, 'Contact', 'Lead') as CURRENT_PERSON_TYPE,
    
    --LIFECYCLE STAGES
    
    IFNULL(LEADS.CREATED_DATE, CONTACTS.CREATED_DATE) as CREATED_DATE,
    LEADS.CREATED_DATE as LEAD_CREATED_DATE,
    CONTACTS.CREATED_DATE as CONTACT_CREATED_DATE,
    IFNULL(CONTACTS.DATE_STAGE_MAL_C, LEADS.DATE_STAGE_MAL_C) as MAL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_MEL_C, LEADS.DATE_STAGE_MEL_C) as MEL_DATE,
    IFNULL(IFNULL(CONTACTS.DATE_STAGE_MQL_C, CONTACTS.MQL_DATE_C), IFNULL(LEADS.DATE_STAGE_MQL_C, LEADS.MQL_CHECK_DATE_C)) as MQL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_SAL_C, IFNULL(LEADS.DATE_STAGE_SAL_C, LEADS.WORKING_DATE_C)) as SAL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_MRL_C, LEADS.DATE_STAGE_MRL_C) as MRL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_WORKING_C, LEADS.DATE_STAGE_WORKING_C) AS SEL_DATE,
    IFNULL(IFNULL(CONTACTS.DATE_STAGE_SQL_C, CONTACTS.SQL_DATE_C), IFNULL(LEADS.DATE_STAGE_SQL_C, LEADS.SQL_CHECK_DATE_C)) as SQL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_SRL_C, LEADS.DATE_STAGE_SRL_C) as SRL_DATE,
    IFNULL(CONTACTS.DATE_STAGE_DISQUALIFED_C, IFNULL(LEADS.DATE_STAGE_DISQUALIFED_C, LEADS.DQ_DATE_C)) as DQ_DATE,
    IFNULL(CONTACTS.DATE_STAGE_CUSTOMER_C, LEADS.DATE_STAGE_CUSTOMER_C) as CUSTOMER_DATE,
    IFNULL(CONTACTS.DATE_STAGE_FORMER_CUSTOMER_C, LEADS.DATE_STAGE_FORMER_CUSTOMER_C) as FORMER_CUSTOMER_DATE,
    LEADS.CONVERTED_DATE as CONVERTED_CONTACT_DATE,
    LEADS.DISQUALIFIED_PICKLIST_C as DQ_REASON,
    LEADS.DISQUALIFIED_REASON_DESCRIPTION_C as DQ_REASON_DESCRIPTION,
        
    
    --MQL DIMENSIONS
    
    LEADS.TYPE_OF_MQL_C as TYPE_OF_MQL,
    
    --DEMOGRAPHICS
    
    IFNULL(CONTACTS.GLOBAL_REGION_C, IFNULL(LEADS.GLOBAL_REGION_C, IFF(IFNULL(CONTACTS.SALES_REGION_C, LEADS.SALES_REGION_C) = 'North America', 'NAM', IFNULL(CONTACTS.SALES_REGION_C, LEADS.SALES_REGION_C)))) as GLOBAL_REGION,
    IFF(IFNULL(CONTACTS.SALES_REGION_C, LEADS.SALES_REGION_C) = 'North America', 'NAM', IFNULL(CONTACTS.SALES_REGION_C, LEADS.SALES_REGION_C))  as SALES_REGION,
    IFNULL(CONTACTS.INFERRED_COUNTRY_C, IFNULL(LEADS.COUNTRY, IFNULL(LEADS.INFERRED_COUNTRY_C, LEADS.ZOOM_INFO_COUNTRY_C))) as COUNTRY,
    IFNULL(JOB_FUNCTION_CLEANED_C, LEADS.ZOOM_INFO_JOB_FUNCTION_C) as JOB_FUNCTION,
    IFNULL(JOB_LEVEL_CLEANED_C, LEADS.ZOOM_INFO_MANAGEMENT_LEVEL_C) as JOB_LEVEL,
    IFNULL(IFNULL(CONTACTS.TITLE, CONTACTS.ZOOM_INFO_JOB_TITLE_C), IFNULL(LEADS.TITLE, LEADS.ZOOM_INFO_JOB_TITLE_C)) as JOB_TITLE,
    IFNULL(CONTACTS.PERSONA_C, LEADS.PERSONA_C) as PERSONA,
    
    
    --SOURCE INFORMATION
    
    IFNULL(CONTACTS.LEAD_SOURCE, LEADS.LEAD_SOURCE) as LEAD_SOURCE,
    IFNULL(CONTACTS.SECONDARY_LEAD_SOURCE_C, LEADS.SECONDARY_LEAD_SOURCE_C) as SECONDARY_LEAD_SOURCE,
    IFNULL(CONTACTS.SOURCE_FIRST_LEAD_SOURCE_DETAIL_C, LEADS.SOURCE_FIRST_LEAD_SOURCE_DETAIL_C) as SOURCE_FIRST_LEAD_SOURCE_DETAIL,
    IFNULL(CONTACTS.SOURCE_LAST_PERSON_SOURCE_C, LEADS.SOURCE_LAST_PERSON_SOURCE_C) as LAST_LEAD_SOURCE,
    IFNULL(CONTACTS.SOURCE_LAST_SECONDARY_LEAD_SOURCE_C, LEADS.SOURCE_LAST_SECONDARY_LEAD_SOURCE_C) as LAST_SECONDARY_LEAD_SOURCE,
    IFNULL(CONTACTS.SOURCE_LAST_LEAD_SOURCE_DETAIL_C, LEADS.SOURCE_LAST_LEAD_SOURCE_DETAIL_C) as SOURCE_LAST_LEAD_SOURCE_DETAIL,
    
    --STATUS
    
    LEADS.STATUS as LEAD_STATUS,
    
    --LEAD SCORE
    
    IFNULL(CONTACTS.LEAD_SCORE_C, LEADS.LEAD_SCORE_C) as LEAD_SCORE,
    IFNULL(CONTACTS.SCORE_AT_MQL_C, LEADS.SCORE_AT_MQL_C) as LEAD_SCORE_AT_MQL,
    IFNULL(CONTACTS.PROFILE_SCORE_C, LEADS.PROFILE_SCORE_C) as PROFILE_SCORE,
    IFNULL(CONTACTS.ENGAGEMENT_SCORE_C, LEADS.ENGAGEMENT_SCORE_C) as ENGAGEMENT_SCORE
    
FROM FIVETRAN_DATABASE.SALESFORCE.LEAD LEADS
FULL JOIN FIVETRAN_DATABASE.SALESFORCE.CONTACT CONTACTS
    ON LEADS.CONVERTED_CONTACT_ID = CONTACTS.ID
WHERE IFNULL(CONTACTS.IS_DELETED, LEADS.IS_DELETED) = FALSE


),

merged_leads AS (
    
    SELECT LEAD_ID
    FROM FIVETRAN_DATABASE.SALESFORCE.LEAD_HISTORY
    WHERE field = 'leadMerged'
    GROUP BY 1
    
),

merged_contacts AS (

    SELECT CONTACT_ID
    FROM FIVETRAN_DATABASE.SALESFORCE.CONTACT_HISTORY
    WHERE field = 'contactMerged'
    GROUP BY 1

),

data AS (

SELECT

    *,
    IFF(
    LEAD_SOURCE = 'Marketing' AND MQL_DATE IS NULL,
    SAL_DATE,
    NULL
    ) as MQL_DATE_FROM_SAL,
    IFF(PERSON_ID IN (SELECT * FROM merged_leads) OR PERSON_ID IN (SELECT * FROM merged_contacts), 'MERGED', NULL) as IS_MERGED

FROM source

)

SELECT *
FROM data
